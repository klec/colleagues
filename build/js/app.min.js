(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var tables = require('./furniture/tables');
var sofa = require('./furniture/sofa');
var coworkers = require('./coworkers/coworkers');

var game = new Phaser.Game(800, 600, Phaser.AUTO, '', { preload: preload, create: create, update: update });

function preload() {
    game.load.image('floor', '../img/floor.jpg');
    game.load.image('table', '../img/furniture/desc.png');
    game.load.image('sofa', '../img/furniture/sofa.png');
    game.load.spritesheet('dude', '../img/dude.png', 67, 100);
}

function create() {
    game.physics.startSystem(Phaser.Physics.ARCADE);
    game.add.tileSprite(0, 0, game.world.width, game.world.height, 'floor');

    tables.initTables(game);
    sofa.initSofa(game);
    coworkers.initCoworkers(game);

    cursors = game.input.keyboard.createCursorKeys();
}

function update() {
    game.physics.arcade.collide(coworkers.items, tables.items);

    coworkers.items.body.velocity.x = 0;

    if (cursors.left.isDown)
    {
        //  Move to the left
        coworkers.items.body.velocity.x = -100;

        coworkers.items.animations.play('left');
    }
    else if (cursors.right.isDown)
    {
        //  Move to the right
        coworkers.items.body.velocity.x = 100;

        coworkers.items.animations.play('right');
    }
    else if (cursors.up.isDown)
    {
        //  Move to the right
        coworkers.items.body.velocity.y = -100;

        coworkers.items.animations.play('left');
    }
    else if (cursors.down.isDown)
    {
        //  Move to the right
        coworkers.items.body.velocity.y = 100;

        coworkers.items.animations.play('right');
    }
    else
    {
        //  Stand still
        coworkers.items.animations.stop();

        coworkers.items.frame = 1;
    }
}


},{"./coworkers/coworkers":2,"./furniture/sofa":3,"./furniture/tables":4}],2:[function(require,module,exports){
var coworkers = {
    items: {},
    initCoworkers: function(game) {
        var dude = game.add.sprite(0, game.world.height - 100, 'dude');

        //  We need to enable physics on the player
        game.physics.arcade.enable(dude);

        //  Player physics properties. Give the little guy a slight bounce.
        dude.body.bounce.y = 0;
        dude.body.gravity.y = 0;
        dude.body.collideWorldBounds = true;

        //  Our two animations, walking left and right.
        dude.animations.add('left', [0, 1, 2, 3, 4, 5, 6, 7, 8], 10, true);
        dude.animations.add('right', [9, 10, 11, 12, 13, 14, 15, 16, 17], 10, true);

        this.items = dude;
    }
};

module.exports = coworkers;


},{}],3:[function(require,module,exports){
var sofa = {
    initSofa: function(game) {
        var sofa = game.add.sprite(game.world.width - 130, 170, 'sofa');
        sofa.scale.setTo(2, 2);
        //sofa.anchor.setTo(0.5, 0.5);
        //sofa.immovable = true;
    }
};

module.exports = sofa;


},{}],4:[function(require,module,exports){
var tables = {
    items: {},
    initTables: function(game) {
        var tables = game.add.group();
        tables.enableBody = true;

        var table = tables.create(80, 150, 'table');
        table.anchor.setTo(0.5, 0.5);
        table.angle = 90;
        table.body.immovable = true;

        var table = tables.create(0, 320, 'table');
        table.body.immovable = true;

        var table = tables.create(game.world.width - 500, 80, 'table');
        table.anchor.setTo(0.5, 0.5);
        table.angle = 180;
        table.body.immovable = true;

        var table = tables.create(game.world.width - 325, 80, 'table');
        table.anchor.setTo(0.5, 0.5);
        table.angle = 180;
        table.body.immovable = true;

        var table = tables.create(game.world.width - table.width/2, 80, 'table');
        table.anchor.setTo(0.5, 0.5);
        table.angle = 180;
        table.body.immovable = true;

        var table = tables.create(game.world.width - table.width, game.world.height - table.height, 'table');
        table.body.immovable = true;

        var table = tables.create(game.world.width - 400, game.world.height - table.height, 'table');
        table.body.immovable = true;

        this.items = tables;
    }
};

module.exports = tables;


},{}]},{},[1]);
